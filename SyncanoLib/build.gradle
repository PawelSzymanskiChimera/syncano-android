buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 11
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest {
            java.srcDirs = ['instrumentTest/java']
        }

        instrumentTest.setRoot('tests')
    }

    // This is important, it will run lint checks but won't abort build
    lintOptions {
        abortOnError false
    }
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
}

apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.syncano'
version = '1.0.1'

configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
            // Value userName and password are used only for for uploadArchives.
            // If you don't need to do it, just put some values in quotes (userName: "user").
            // YOu can also put those values into gradle.properties file in your user directory.
            authentication(userName: ossrhUsername,
                    password: ossrhPassword)
        }

        pom.project {
            name 'Android Syncano Library'
            packaging 'aar'
            description 'Syncano is a backend as a service in the cloud that makes it easier for app developers to sync and scale data across devices and servers in real-time.'
            url 'http://www.syncano.com/'

            scm {
                url 'https://github.com/Syncano/syncano-android'
                connection 'scm:git@github.com/Syncano/syncano-android.git'
                developerConnection 'scm:git@github.com/Syncano/syncano-android.git'
            }

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'http://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'd.czlonka'
                    name 'Dawid Czlonka'
                    email 'dawid.czlonka@mindpower.pl'
                }
            }
        }
    }
}